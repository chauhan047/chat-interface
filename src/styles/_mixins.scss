@import './variables';

@mixin mobile {
  @media (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-md}) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

// Flexbox helpers
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Typography
@mixin text-style($size, $weight, $color, $line-height) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: $line-height;
}

@mixin heading {
  @include text-style($font-size-lg, $font-weight-bold, $text-primary, $line-height-heading);
}

@mixin subheading {
  @include text-style($font-size-md, $font-weight-medium, $text-secondary, $line-height-heading);
}

@mixin body-text {
  @include text-style($font-size-md, $font-weight-regular, $text-primary, $line-height-body);
}

@mixin small-text {
  @include text-style($font-size-sm, $font-weight-regular, $text-tertiary, $line-height-body);
}

// Button styles
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

@mixin primary-button {
  @include button-reset;
  background-color: $primary-color;
  color: $text-light;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius-full;
  font-weight: $font-weight-medium;
  transition: background-color $transition-fast;
  
  &:hover {
    background-color: $primary-dark;
  }
  
  &:active {
    transform: scale(0.98);
  }
  
  &:disabled {
    background-color: $secondary-light;
    cursor: not-allowed;
  }
}

// Card and container styles
@mixin card {
  background-color: $bg-light;
  border-radius: $border-radius-md;
  box-shadow: $shadow-sm;
  padding: $spacing-md;
}

// Animation mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

@mixin slide-in($direction: 'right', $distance: 20px, $duration: $transition-normal) {
  @if $direction == 'right' {
    animation: slideInRight $duration;
    
    @keyframes slideInRight {
      from { 
        transform: translateX($distance);
        opacity: 0;
      }
      to { 
        transform: translateX(0);
        opacity: 1;
      }
    }
  } @else if $direction == 'left' {
    animation: slideInLeft $duration;
    
    @keyframes slideInLeft {
      from { 
        transform: translateX(-$distance);
        opacity: 0;
      }
      to { 
        transform: translateX(0);
        opacity: 1;
      }
    }
  } @else if $direction == 'up' {
    animation: slideInUp $duration;
    
    @keyframes slideInUp {
      from { 
        transform: translateY($distance);
        opacity: 0;
      }
      to { 
        transform: translateY(0);
        opacity: 1;
      }
    }
  } @else if $direction == 'down' {
    animation: slideInDown $duration;
    
    @keyframes slideInDown {
      from { 
        transform: translateY(-$distance);
        opacity: 0;
      }
      to { 
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
}

// Focus and accessibility
@mixin focus-outline {
  outline: 2px solid $primary-color;
  outline-offset: 2px;
}